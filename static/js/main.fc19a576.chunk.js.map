{"version":3,"sources":["containers/Navbar/NavElement/NavElement.js","containers/Navbar/Navbar.js","Button/Button.js","containers/Hero/Hero.js","containers/Portfolio/PortfolioElement/PortfolioElement.js","containers/Portfolio/Portfolio.js","containers/contact/contact.js","App.js","serviceWorker.js","index.js"],"names":["NavElement","props","className","href","linkTo","children","Navbar","Button","destination","name","Hero","PortfolioElement","title","src","image","alt","alternative","Portfolio","id","contact","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"uWAYeA,G,UATI,SAACC,GAEhB,OACI,yBAAKC,UAAU,cACX,uBAAGC,KAAMF,EAAMG,OAAQF,UAAU,WAAWD,EAAMI,aCW/CC,G,MAdA,WACX,OACI,6BACI,uCACA,yBAAKJ,UAAU,cACX,kBAAC,EAAD,CAAYE,OAAO,KAAnB,QACA,kBAAC,EAAD,CAAYA,OAAO,cAAnB,aACA,kBAAC,EAAD,CAAYA,OAAO,YAAnB,eCDDG,G,YAPA,SAACN,GACZ,OACI,yBAAKC,UAAU,iBACX,uBAAGC,KAAMF,EAAMO,YAAaN,UAAU,sBAAsBD,EAAMQ,SCU/DC,EAZF,WACT,OACI,yBAAKR,UAAU,kBACX,yBAAKA,UAAU,uBACf,wBAAIA,UAAU,2BAAd,YACA,uBAAGA,UAAU,aAAb,2EAAiG,6BAAjG,mFACA,kBAAC,EAAD,CAAQO,KAAK,UAAUD,YAAY,gBCWhCG,G,YAjBU,SAACV,GACtB,OACI,yBAAKC,UAAU,qBACX,yBAAKA,UAAU,gCACX,wBAAIA,UAAU,sBAAsBD,EAAMW,QAE9C,yBAAKC,IAAKZ,EAAMa,MAAOC,IAAKd,EAAMe,YAAad,UAAU,oBACzD,uBAAGA,UAAU,kBAAkBD,EAAMI,UACrC,yBAAKH,UAAU,oBACX,kBAAC,EAAD,CAAQO,KAAK,OAAOD,YAAY,UCejCS,EAxBG,WACd,OACI,yBAAKf,UAAU,sBAAsBgB,GAAG,aACpC,yBAAKhB,UAAU,oBACX,wBAAIA,UAAU,8BAAd,cAEJ,yBAAKA,UAAU,kBACX,kBAAC,EAAD,CAAkBU,MAAM,WAAWE,MAAM,mGAAmGE,YAAY,kBAAxJ,mMAGA,kBAAC,EAAD,CAAkBJ,MAAM,WAAWE,MAAM,mGAAmGE,YAAY,kBAAxJ,mMAGA,kBAAC,EAAD,CAAkBJ,MAAM,WAAWE,MAAM,mGAAmGE,YAAY,kBAAxJ,mMAGA,kBAAC,EAAD,CAAkBJ,MAAM,WAAWE,MAAM,mGAAmGE,YAAY,kBAAxJ,sMCNDG,G,MAXC,WACZ,OACI,yBAAKjB,UAAU,gBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,8BAAd,e,MCoBDkB,MApBf,WACE,OACE,yBAAKlB,UAAU,OACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,kBACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,gBACb,kBAAC,EAAD,UCPUmB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.fc19a576.chunk.js","sourcesContent":["import React from 'react';\r\nimport './NavElement.css';\r\n\r\nconst NavElement = (props) => {\r\n\r\n    return(\r\n        <div className=\"navElement\">\r\n            <a href={props.linkTo} className=\"navLink\">{props.children}</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavElement;","import React from 'react';\r\nimport NavElement from './NavElement/NavElement';\r\nimport './Navbar.css';\r\n\r\nconst Navbar = () => {\r\n    return(\r\n        <nav>\r\n            <div>Burger</div>\r\n            <div className=\"navButtons\">\r\n                <NavElement linkTo=\"#\">Home</NavElement>\r\n                <NavElement linkTo=\"#portfolio\">Portfolio</NavElement>\r\n                <NavElement linkTo=\"#contact\">Contact</NavElement>\r\n            </div>\r\n            \r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n\r\n","import React from 'react';\r\nimport './Button.css';\r\n\r\nconst Button = (props) => {\r\n    return(\r\n        <div className=\"custom-button\">\r\n            <a href={props.destination} className=\"custom-button-link\">{props.name}</a>\r\n        </div>\r\n    )\r\n}\r\nexport default Button;","import React from 'react';\r\nimport './Hero.css';\r\nimport Button from '../../Button/Button';\r\n\r\nconst Hero = () => {\r\n    return(\r\n        <div className=\"hero-container\">\r\n            <div className=\"hero-text-container\">\r\n            <h1 className=\"hero-header header-glow\">Welcome!</h1>\r\n            <p className=\"hero-text\">Thank you for visiting my Page and showing interest into me and my work.<br/> My name is Jan-Fleming Nickelsen and I am a 25 year old developer from Germany</p>\r\n            <Button name=\"Contact\" destination=\"#contact\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Hero;","import React from 'react';\r\nimport './PortfolioElement.css';\r\nimport Button from '../../../Button/Button';\r\n\r\nconst PortfolioElement = (props) => {\r\n    return(\r\n        <div className=\"portfolio-element\">\r\n            <div className=\"portfolio-headline-container\">\r\n                <h3 className=\"portfolio-headline\">{props.title}</h3>\r\n            </div>\r\n            <img src={props.image} alt={props.alternative} className=\"portfolio-image\"/>\r\n            <p className=\"portfolio-text\">{props.children}</p>\r\n            <div className=\"button-container\">\r\n                <Button name=\"More\" destination=\"#\"/>   \r\n            </div>\r\n            \r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default PortfolioElement;","import React from 'react';\r\nimport './Portfolio.css';\r\nimport PortfolioElement from './PortfolioElement/PortfolioElement';\r\n\r\nconst Portfolio = () => {\r\n    return(\r\n        <div className=\"portfolio-container\" id=\"portfolio\">\r\n            <div className=\"header-container\">\r\n                <h1 className=\"section-header header-glow\">Portfolio</h1>\r\n            </div>\r\n            <div className=\"portfolio-body\">\r\n                <PortfolioElement title=\"Ghostboy\" image=\"https://64.media.tumblr.com/0288a1c8ddae9b42a5a413a0589b3624/tumblr_nd5uphw4Tc1rtbl5vo1_400.gifv\" alternative=\"Ghostboy Cover\">\r\n                    Handdrawn 2D-Shoot-'em-up inspired by Cuphead. Created in Unreal Engine 4 with a combination of Blueprints and C++. Soundtrack composed by myself using Bosca Ceoil. Animation done in Blender.\r\n                </PortfolioElement>\r\n                <PortfolioElement title=\"Ghostboy\" image=\"https://64.media.tumblr.com/0288a1c8ddae9b42a5a413a0589b3624/tumblr_nd5uphw4Tc1rtbl5vo1_400.gifv\" alternative=\"Ghostboy Cover\">\r\n                    Handdrawn 2D-Shoot-'em-up inspired by Cuphead. Created in Unreal Engine 4 with a combination of Blueprints and C++. Soundtrack composed by myself using Bosca Ceoil. Animation done in Blender.\r\n                </PortfolioElement>\r\n                <PortfolioElement title=\"Ghostboy\" image=\"https://64.media.tumblr.com/0288a1c8ddae9b42a5a413a0589b3624/tumblr_nd5uphw4Tc1rtbl5vo1_400.gifv\" alternative=\"Ghostboy Cover\">\r\n                    Handdrawn 2D-Shoot-'em-up inspired by Cuphead. Created in Unreal Engine 4 with a combination of Blueprints and C++. Soundtrack composed by myself using Bosca Ceoil. Animation done in Blender.\r\n                </PortfolioElement>\r\n                <PortfolioElement title=\"Ghostboy\" image=\"https://64.media.tumblr.com/0288a1c8ddae9b42a5a413a0589b3624/tumblr_nd5uphw4Tc1rtbl5vo1_400.gifv\" alternative=\"Ghostboy Cover\">\r\n                    Handdrawn 2D-Shoot-'em-up inspired by Cuphead. Created in Unreal Engine 4 with a combination of Blueprints and C++. Soundtrack composed by myself using Bosca Ceoil. Animation done in Blender.\r\n                </PortfolioElement>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default Portfolio;","import React from 'react';\r\nimport './contact.css';\r\n\r\nconst contact = () => {\r\n    return(\r\n        <div className=\"contact-body\">\r\n            <div className=\"header-container\">\r\n                <h1 className=\"section-header header-glow\">Contact</h1>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default contact;","import React from 'react';\nimport Navbar from './containers/Navbar/Navbar'\nimport Hero from './containers/Hero/Hero'\nimport Portfolio from './containers/Portfolio/Portfolio'\nimport Contact from './containers/contact/contact'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar/>\n      <div className=\"body\">\n        <div className=\"hero-body\">\n          <Hero/>\n        </div>\n        <div className=\"portfolio-body\">\n          <Portfolio/>  \n        </div>\n        <div className='contact-body'>\n          <Contact/>\n        </div>\n      </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}